### contains lists of all the different words for each word type
# random words are selected from these lists
class Words:
  def __init__(self):
    self.singular_nouns = ["tree", "stone", "forest", "rock", "codfish", "fortune cookie", "duck", "Narnia", "face", "prison", "fire", "swamp", "tin can", "rockslide", "knucklehead", "poison ivy", "funnelcake", "barrel", "bandit", "bucket", "corkscrew", "roller coaster", "innuendo", "homestead", "groove", "secret", "haircut", "breakfast", "Buddha", "deliverance", "dragon", "alien", "trail"]
    self.plural_nouns = ["trees", "stones", "forests", "rocks", "codfish", "fortune cookies", "ducks", "cliffs", "faces", "prisons", "fires", "swamps", "tin cans", "rockslides", "knuckleheads", "funnelcakes", "barrels", "bandits", "buckets", "corkscrews", "roller coasters", "innuendos", "homesteads", "grooves", "secrets", "haircuts", "breakfasts", "Buddhas", "deliverances", "dragons", "aliens", "trails"]
    self.adjectives = ["large", "small", "grandiose", "magnificent", "glorious", "common", "unimposing", "unassuming", "old", "woebegone", "French", "poisonous", "creased", "crooked", "delirious", "damaged", "daring", "efficient", "excitable", "enraged", "febrile", "fork-tongued", "forgiving", "gregarious", "gourmet", "gangrenous", "haughty", "holy", "hopped up", "ignominious", "icy", "irrational", "just", "janky", "joyful", "kaleidoscopic", "luscious", "ludicrous", "liscentious", "mighty", "motorized", "misshapen", "negative", "nerdy", "needy", "nitwitted"]
    self.adverbs = ["suspiciously", "raucously", "mysteriously", "merrily", "angrily", "anxiously", "courageously", "deliberately", "erroneously", "fervently", "graciously", "haughtily", "ignominiously", "jokingly", "kaleidoscopically", "lurchingly", "menacingly", "notoriously", "openly", "painstakingly", "quizzically", "roundly", "surprisingly", "surreptitiously"]
    self.adverbs = ["suspiciously", "raucously", "mysteriously", "merrily", "angrily", "anxiously", "courageously", "deliberately", "erroneously", "fervently", "graciously", "haughtily", "ignominiously", "jokingly", "kaleidoscopically", "lurchingly", "menacingly", "notoriously", "openly", "painstakingly", "quizzically", "roundly", "surprisingly", "surreptitiously"]
    self.singular_verbs = ["evokes", "laments", "captures", "explores", "rests", "sweeps", "frames", "relaxes", "flows", "shades", "dims", "hums", "jumps", "drives", "roams", "dreams", "sleeps", "sings", "tears", "tries", "ululates", "verifies", "winks", "exhonerhates", "yokes", "zings"]
    self.plural_verbs = ["evoke", "lament", "capture", "explore", "rest", "sweep", "frame", "relax", "flow", "shade", "dim", "hum", "jump", "drive", "roam", "dream", "sleep", "sing", "tear", "try", "ululate", "verify", "wink", "exhonerhate", "yoke", "zing"]

